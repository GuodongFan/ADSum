[{"body": "as @ spytheman said , once type analysis of match block gets smarter , the f64 ( ) in such code should be able to be removed . < code > // a binary tree example struct empty { } struct node { value f64 left tree right tree } type tree = empty | node fn sum ( tree tree ) f64 { return match tree { // todo : remove f64 ( ) empty { f64 ( 0 ) } node { tree.value + sum ( tree.left ) + sum ( tree.right ) } } } fn main ( ) { left : = node { 0.2 , empty { } , empty { } } right : = node { 0.3 , empty { } , node { 0.4 , empty { } , empty { } } } tree : = node { 0.5 , left , right } println ( 'tree structure : < cur > tree ' ) println ( 'tree sum : < cur > { sum ( tree ) } ' ) }\n", "itape": "sum ( ) ' block should be extended of match block\n", "our": "tensor(3264)\tremove f64 ( ) from match block\n", "gd": "smarter type analysis in match block\n"}, {"body": "when i register an event listener in the `` useeffect '' function and then remove it in the return statement , it removes this event listener after the route changes , which causes warnings about memory leaks in react . is there a solution to that ? example : edit : it removes the event listener as it should , i just had settimeout ( ) running that leaked over to the next page .. < code > useeffect ( ( ) = > { window.addeventlistener ( `` scroll '' , scrollfunction ) return ( ) = > { window.removeeventlistener ( `` scroll '' , scrollfunction ) // this event listener is removed after the new route loads } } , [ ] )\n", "itape": "how to remove memory leaks in a route page ?\n", "our": "tensor(78)\thow to remove an event listener after a route change?\n", "gd": "how to remove an event listener before a route changes ?\n"}, {"body": "i 'm working on a project , where i 've split some logic into a separate package . as it is conventional , inside that separate project i export all components and utilities through the main entry file , so i can have clean imports on my nextjs project again . now i have some utils inside my splitted package , which use the node package `` fs '' for instance . this will cause a build error , even though i never import the said util into client-side components or pages from my project . my util is only used inside the getstaticprops and paths methods , which is okay since node packages are available inside those . the current workaround i 'm using was to move the utils which rely on node packages into a separate file , so webpack will never go there form the nextjs project . this forces me to have some rather `` ugly '' imports through a build folder , since i 'm working with typescript . it would be nice if nextjs would not detect methods which work with node packages , unless they are getting imported . < code >\n", "itape": "use node only for node packages in nextjs project\n", "our": "tensor(1981)\tprevent imports of node packages\n", "gd": "module resolve error when using node packages edge case\n"}, {"body": "in my app i use a fullscreen dialog to show record details . it would be great if the users could swipe down to dismiss the dialog but i ca n't get it to work . i 've used the gesture events and have tried to detect the scroll position of the dialog but without success : i can hook in to the swipe event but can not detect the scroll position of the panel in the dialog which i need to determine whether or not it should be closed . i notice there is a 'bounce ' of the dialog when it 's swiped down - it there an event that allows me to react to this so that i can close the dialog ? < code >\n", "itape": "how can i swipe event in a fullscreen dialog ?\n", "our": "tensor(3484)\tswipe down to close a fullscreen dialog\n", "gd": "swipe down to dismiss fullscreen dialog on mobile devices\n"}, {"body": "let 's say i have a project with multiple clients , client1.nextjs.com , client2.nextjs.com , ... etc is their portfolio website & they 'll have the same layout overall , if you open the client1 portfolio for example i 'll have to make fetch request to get the text/images/colors for this client including the meta tags for this portfolio , now the question is if the client share their portfolio to the social media , web scrapers like facebook , twitter , etc .. will not get the meta tags from api since they do n't load javascript . if i have like +10k clients , how to solve this ? is it really ideal to make +10k fetch requests on the build time ? what if each client have a sub page like /projects , let 's say on average 10 projects for each client , that 's another +10k fetch requests , also in back-end we have a dashboard so each client can change their data all the time , so i have to re-build each time client change anything . is react / next ideal for this kind of project ? < code >\n", "itape": "how to get meta tags from api ?\n", "our": "tensor(1596)\tfetch requests for multiple clients\n", "gd": "can next.js handle dynamic meta tags coming from api for link sharing ?\n"}, {"body": "hi everyone , not sure if this is a bug report or intended behavior but i noticed that if you use router.push , there is no way to mention the prevention of scroll to top , like there is for link . here are the docs for this : < url > it seems like here in the code , there needs to be a check for scroll : next.js/packages/next/next-server/lib/router/router.ts lines 738 to 740 in 23db226 if ( hash === `` ) { window.scrollto ( 0 , 0 ) return @ timer @ timneutkens is there a hidden way to do this and docs just need to be updated or there is a reason for router.push to not support scroll ? @ everyone-else : do you have workarounds in the meantime ? < code >\n", "itape": "scroll to top of e.g ( 0 )\n", "our": "tensor(1324)\trouter.push does not support scroll to top\n", "gd": "preventing scroll to top not supported by 'router.push ' ?\n"}, {"body": "hi , everyone ! i try to customize the icon shown on the left side , but it seems there is no any elegant way to do that . does anyone know how to do this ? < code >\n", "itape": "can not customize the icon on the left side\n", "our": "tensor(3402)\thow to customize the icon shown on the left side?\n", "gd": "is there any way to customize icon ?\n"}, {"body": "i thought go missed an opportunity when garbage collection did n't extend to streams and files . they required manual `` freeing/closing '' instead of the language handling it for me when the variable went out of scope . defer was pushed as a helper for calling close , but this does n't work correctly in a loop unless it 's wrapped by a function . mistakes are often made with http clients in go for example . this would reduce code size , eliminate leaks and reduce cognitive load . thoughts ? < code >\n", "itape": "ca n't extend to a loop and reduce\n", "our": "tensor(3250)\tadd manual garbage collection / freeing/closing support\n", "gd": "eliminate file.close ( ) and related using destructors\n"}, {"body": "docs says : the devtool option adds the plugin internally so you would end up with the plugin applied twice . can i somewhere see what does each option of devtool maps to ? i did not find anywhere in the sourcecode . was looking for inline-source-map to see what plugin config/other options it sets . < code >\n", "itape": "how to show and devtool maps to ?\n", "our": "tensor(3573)\thow does devtool map to?\n", "gd": "where to find devtool sourcemap configurations\n"}, {"body": "bug report describe the bug i am trying to import a custom element written in preact using dynamic import . the custom element is loaded into the dom but the page does not seem to get hydrated . to reproduce if you open the sandbox the page gets loaded , but it should print `` mounted '' in the console . it should also console if you click on `` click me '' . < url > expected behavior loading custom and javascript gets hydrated without errors . system information version of next.js : 9.2.3-canary.28 ( also tried 9.2.2 ) preact : 10.3.3 react : 16.13.0 how do you recommend loading an external custom element inside a .js/.ts file ? < code >\n", "itape": "import and javascript in preact using dynamic element\n", "our": "tensor(2133)\tloading custom element inside a.js/.ts file does not\n", "gd": "page is not hydrated after dynamic import\n"}, {"body": "bug report describe the bug i 'm trying to start a new project . using npx create-next-app . everything downloads , and then i call npm run dev . i immediately get about 100 errors : there are multiple modules with names that only differ in casing . this can lead to unexpected behavior when compiling on a filesystem with other case-semantic . error : invalid hook call . hooks can only be called inside of the body of a function component . this could happen for one of the following reasons : you might have mismatching versions of react and the renderer ( such as react dom ) you might be breaking the rules of hooks you might have more than one copy of react in the same app a clear and concise description of what the bug is . to reproduce steps to reproduce the behavior , please provide code snippets or a repository : 1.npx create-next-app client 2.cd client 3.npm run dev 4.getting all the errors 5.if i open localhost:3000 i have an internal server error . expected behavior the app should start and i should see the default first page . screenshots system information os : [ windows ] browser : chrome , firefox version of next.js : 10.0.1 version of node.js : 13.12.0 < code >\n", "itape": "error when trying to start the new project of hooks\n", "our": "tensor(412)\tnpx create-next-app gets 100 errors\n", "gd": "ca n't start a project\n"}, {"body": "the docs clearly state before deciding to use a custom server please keep in mind that it should only be used when the integrated router of next.js ca n't meet your app requirements . a custom server will remove important performance optimizations , like serverless functions and automatic static optimization . is using the custom server for additionally providing an api the right thing to do or would it be better to create the server completely independent from next.js ? since lots of the pages i 'm going to create will be server-side rendered i thought it might be a good idea to integrate the api directly into the next.js app , but everytime i read this statement i become unsure . < code >\n", "itape": "create server completely as a custom server application\n", "our": "tensor(1827)\tshould i use a custom server for additionally providing an api?\n", "gd": "custom server for the api ?\n"}, {"body": "hi , after dealing with the # 10148 error using css modules with a global style , we moved trying styled-jsx ( with sass ) . i noticed that in production mode using the 9.3 version the style tag rendered in the head missing , applying the style only after rehydrate the page with a terrible initial effect ... upgrading to 9.3.1 all start working fine but i ca n't understand why \ud83e\udd14 < code >\n", "itape": "how to use css modules style triggers ?\n", "our": "tensor(2106)\tcss module with global style missing in production mode\n", "gd": "styled-jsx server side work with 9.3.1 but not with 9.3\n"}, {"body": "hi , recently i bought a template from themeforest that included a owl carousel but sometimes work and some does n't here how my _document.js looks as you can see i 'm importing jquery before thw owl-carousel script , so not sure if the problem is next js it self or with the file inside the script tags < code > < html lang= '' en '' > < head > < meta charset= '' utf-8 '' key= '' charset '' / > < meta name= '' viewport '' content= '' width=device-width , initial-scale=1 , shrink-to-fit=no '' key= '' viewport '' / > < link rel= '' shortcut icon '' href= '' images/favicon.ico '' / > < link href= '' < url > rel= '' stylesheet '' / > < link rel= '' stylesheet '' href= '' owlcarousel/owl.carousel.min.css '' / > < link rel= '' stylesheet '' href= '' owlcarousel/owl.theme.default.min.css '' / > < /head > < body > < main / > < nextscript / > < script src= '' js/jquery-3.3.1.min.js '' > < /script > < script src= '' js/popper.min.js '' > < /script > < script src= '' js/bootstrap.min.js '' > < /script > < script src= '' js/main.js '' > < /script > < script src= '' < url > < script src= '' owlcarousel/owl.carousel.min.js '' > < /script > < script src= '' js/custom.js '' > < /script > < /body > < /html >\n", "itape": "next js ( not importing from themeforest )\n", "our": "tensor(1501)\towl carousel not working in themeforest\n", "gd": "owl carousel script not workin\n"}, {"body": "i wanted to get the ball rolling on thoughts regarding ssg , or static site generation . i feel this will be the first step to supporting isomorphic apps , and double as a nice interface for using ssr . also , i believe isomorphism can be wholly contained within the ssg paradigm to form one consistent interface . to kick us off , i started a simple skeleton that represents how an ssg app within yew would be laid out . the notion of pages as dynamically generated is built from what gatsby learned with its node-based tree generation . in principle , any user-defined sequence of operations including plugins or other toolkits could generate these pages . will be continuing with research over the next months , but would love to hear feedback and suggestions for how this feature can work . < url > < code >\n", "itape": "add ball to various pages generation ( ssg paradigm )\n", "our": "tensor(3932)\tstatic site generation ( ssg ) in yew\n", "gd": "static site generation ( ssg ) brainstorming\n"}, {"body": "now v has very useful arrays and ( hash ? ) maps . should v support other commonly used data structures as built-in types ? for example linked list , stack , queue , heap ( priority queue ) , binary search tree , graph , and even data table ( like dataframe in python ) ? < code >\n", "itape": "v server : support for v hash ?\n", "our": "tensor(3320)\tsupport other data structures as built-in types\n", "gd": "support extra data structures ( eg linked list ) as built-in types\n"}, {"body": "hello there ! thanks for the awesome work on vite ! it 's super-duper fast \ud83d\ude0d tldr is it possible to include code from dynamic require ( 'xyz ' ) statement in final bundle ? context : we are using an older dependency that is using dynamic require statements and i 'm wondering if it possible to resolve those during the build . using this config : we are seeing require is not defined in the browser because it looks like vite does n't recognize/include them in the built output . ref is it possible to require commonjs from older modules ? any pointers would be very helpful . thank you all ! \u2764\ufe0f < code > import { defineconfig } from 'vite ' import reactrefresh from ' @ vitejs/plugin-react-refresh ' import nodepolyfills from 'rollup-plugin-polyfill-node ' ; export default defineconfig ( { plugins : [ reactrefresh ( ) ] , build : { rollupoptions : { plugins : [ nodepolyfills ( ) ] , } , } , } )\n", "itape": "dynamic code from dynamic require ( vite )\n", "our": "tensor(2965)\tinclude code from dynamic require ( 'xyz') statement in final\n", "gd": "is it possible to resolve dynamic require ( ) statements ?\n"}, {"body": "something to consider at some point : is it possible to make a crash handling / recovery system similar to erlang in v ? there are various things to consider from conversations in discord : here : < url > and here : < url > < code >\n", "itape": "any idea on how to make a crash handling ?\n", "our": "tensor(3317)\tcrash recovery system similar to erlang in v\n", "gd": "crash handling / recovery similar to erlang possible ?\n"}, {"body": "what can resolve.alias do ? it does n't resolve the path below : in my html : error in the browser console : any ideas on how to do it correctly ? < code > ' < img src= '' @ /assets/images/sample-1.jpg '' > ' // vite.config.js import { defineconfig } from 'vite ' import path from 'path ' export default defineconfig ( { resolve : { alias : { ' @ ' : path.resolve ( __dirname , '/src ' ) , } , } } ) get < url > failed to load resource : the server responded with a status of 404 ( not found ) client:180 [ vite ] connecting ... client:202 [ vite ] connected .\n", "itape": "error when using alias in a second html\n", "our": "tensor(2941)\thow to resolve alias in vite?\n", "gd": "resolve.alias does not resolve paths ?\n"}, {"body": "bug report describe the bug when attempting to import fs inside a static method on a component , we are met with the message can not resolve module 'fs ' in .... to reproduce steps to reproduce the behavior , please provide code snippets or a repository : git clone < url > cd next-fs-bug yarn build expected behavior the fs module to be available . system information os : macos 10.15.5 browser ( if applies ) : n/a version of next.js : 9.4.4 version of node.js : v12.6.1 additional context we are using some custom prop initializers in pages in order to handle pulling in translation data from the file system . this is handled as a static method on a provider component , which imports the fs module and gets the translation data from the file system . the example i 've provided simply attempts to read from the current directory , but is essentially what we are doing in our app . < code >\n", "itape": "module 'fs in a static method not working in\n", "our": "tensor(1514)\timporting fs from a static method on a component\n", "gd": "`` can not resolve module 'fs ' '' inside static component methods\n"}, {"body": "trying to figure out why i 'm not able to retrieve the params in getstaticprops . while i was doing some testing , i was able to get the params in getstaticprops when i go through the page using next/link or userouter 's push . but when it gets reloaded through my custom server that 's when i ca n't retrieve the params . any ideas on what might 've affected it ? here 's the custom server code for the particular route < code > server.get ( '/destinations/ : destination ' , ( req , res ) = > { return nextapp.render ( req , res , '/destinations/ [ destination ] ' , req.params ) ; } ) ;\n", "itape": "retrieve form in getstaticprops does not change through getstaticprops\n", "our": "tensor(1595)\tunable to retrieve params in getstaticprops\n", "gd": "ca n't seem to access params in getstaticprops w/ getstaticpaths ( custom express )\n"}, {"body": "for easier distinguishing from variables , constant names should be uppercase allowing underlines . it makes the code a lot easier to read and is a basic convention among most languages and good practices . < code >\n", "itape": "distinguishing from variables instead names should be uppercase allowing uppercase\n", "our": "tensor(3267)\tconstant names should be uppercase allowing underlines\n", "gd": "constant name to be uppercase\n"}, {"body": "i opened an issue for this as a bug # 19714 , which i 'm pretty sure is correct , but i 'm sharing it here as well in case someone has ever encountered this situation before and found a work around . tl ; dr i ca n't get preview mode to work in production because getstaticprops never gets called even though the preview cookies are set . here 's a synopsis ( i 'm doing this with prismic cms ) 1. from the prismic editor ui , the user clicks on the preview button which redirects to 2. prismic then redirects to 3. the api/preview endpoint then gets the redirecturl from prismic and redirects to /redirecturl , setting the next.js preview cookies . i am able to load the page in preview mode immediately after deploying and rebuilding the app to the server ( digital ocean app platform ) . however , if i leave preview mode and load the page again , i am no longer able to view it in preview mode afterwards . successive attempts redirect me to the correct page with the cookies set , but without getstaticprops getting called . on localhost , bizarrely , it works fine on firefox but not at all on chrome . any help with this would be hugely appreciated ! < code > < url > set-cookie : __prerender_bypass=391b9dd5be2db3f82d091836f424ccd3 ; path=/ ; httponly ; secure ; samesite=none set-cookie : __next_preview_data=eyjhbgcioijiuzi1niisinr5c ... ; path=/ ; httponly ; secure ; samesite=none < url >\n", "itape": "preview mode does n't seem to work in production\n", "our": "tensor(394)\tgetstaticprops not called when preview cookies are set\n", "gd": "setting preview cookies does n't bypass static generation\n"}, {"body": "combining typescript compiler and vite should be added in docs , as show in @ web/dev-server documentation to use both tsc and vite in the same terminal , you can use the -- preservewatchoutput option to avoid both tools clearing the terminal on change . to run both commands on a unix system : < code > tsc -- watch -- preservewatchoutput & vite\n", "itape": "provide a way to use typescript and vite\n", "our": "tensor(2926)\tadd tsc -- watch -- preservewatchoutput option to @ web/dev\n", "gd": "add info in docs for showing vite/tsc outputs on the same terminal window\n"}, {"body": "i initialized a fresh app with vite + typescript . it contains the vue-shims.d.ts . it contains defined a new global property in the main.ts file . now i want to let typescript know this global property exists : the build now fails : could anyone help me with this ? how do i define additional global properties without messing with the included vue-shims ? < code > declare module ' @ vue/runtime-core ' { interface componentcustomproperties { < cur > foo : string ; } } app.config.globalproperties. < cur > foo = `` bar '' src/vue-shims.d.ts:5:15 - error 2305 : module ' '' .. /node_modules/vue/dist/vue '' ' has no exported member 'definecomponent ' . declare module `` * .vue '' { import { definecomponent } from `` vue '' ; ~~~~~~~~~~~~~~~ const component : returntype < typeof definecomponent > ; export default component ; declare module `` * .vue '' { import { definecomponent } from `` vue '' ; const component : returntype < typeof definecomponent > ; export default component ; }\n", "itape": "how to use default component in machine with vite\n", "our": "tensor(3065)\thow to add global properties without messing with vue-shims?\n", "gd": "extend typescript definition for global properties\n"}, {"body": "i am using webpack 5.x to generate a entry scss file but failed , this is the detail information : < url > what should i do to make it generate the css file from entry ? < code >\n", "itape": "webpack 5.x how do i generate the scss file ?\n", "our": "tensor(3602)\thow to generate css file from entry\n", "gd": "why the entry scss file did not generate to distinate css file\n"}, {"body": "i am currently trying to use dynamodb in vercel . but i keep getting this error . i created an iam user with the following permissions : amazondynamodbfullaccess awscloudformationfullaccess cloudwatchfullaccess i also changed the environment variable names , and gave them directly like this . < code > accessdeniedexception : user : arn : aws : sts : :764717618004 : assumed-role/cloudwatch_logs_events_putter/l0zfqqmkovxq44u8qwb1yh0f-805fd9d54732e5470e54bf12bd9a25672e379b5 is not authorized to perform : dynamodb : getitem on resource : arn : aws : dynamodb : ap-south-1:764717618004 : table/users const db = new dynamodb ( { region : process.env.dynamodb_region , accesskeyid : process.env.dynamodb_access_key_id , secretaccesskey : process.env.dynamodb_secret_access_key } ) ;\n", "itape": "unable to use tailwind in react with dynamodb\n", "our": "tensor(577)\tunable to use dynamodb in vercel\n", "gd": "unable to access dynamodb from /api\n"}, {"body": "as of this moment , there are a lot of c. < whatever > calls sprinkled throughout regular .v files in vlib . this code needs to be separated so that c. calls are in .c.v files . it would be really nice if the compiler also gave errors ( warnings to start , perhaps , until everything has been separated properly ) if any c. calls were to show up in plain .v files in the future . < code >\n", "itape": "what 's the best to show up an data ?\n", "our": "tensor(3287)\tseparate c. calls from vlib\n", "gd": "all c calls should be moved to .c.v files .\n"}, {"body": "what is the best approach for a child component to fetch data from an api and then use that data when rendering the component ? in this instance i would ideally not have to write the query for the component in each page component and instead simply import the component as-and-when i need it . on a page i can use getstaticprops and pass the data as a prop to the component but i understand that this is only possible with page components . i apologise in advanced if this is a silly question , and appreciate any help . < code >\n", "itape": "best practices for fetch data from child component\n", "our": "tensor(1604)\tfetch data from api and use that data in rendering child component\n", "gd": "fetch data in a child component\n"}, {"body": "hi . since i am self-hosting my nextjs-app , i need to use ssl certificates . it seems i am required to use a custom server for this . is this not a common scenario for everyone who wants to host the app themselves ? the documentation about custom servers says you should only use if the router does not meet your requirements , but it 's actually the ssl requirement that forces me to use a custom server . also i had to configure babel and use ts-node , since it 's a typescript project and i want to use es6 modules . am i overlooking something or is this the only way i can configure ssl certificates ? < code >\n", "itape": "using ssl certificates for a custom server .\n", "our": "tensor(421)\tself-hosting ssl certificates - custom server\n", "gd": "custom server required for ssl\n"}, {"body": "i wanted to ask if it 's nextjs problem , since i 've been looking for other alternatives and i ca n't find why the screenshot in google search console comes out without the styles , in other pages without nextjs i have n't had that problem . this is the screenshot generated by google from google search console . this is my website of posicionamiento web malaga < url > < code >\n", "itape": "google search console for google seems to detect\n", "our": "tensor(1688)\tgoogle search console screenshot doesn't show the styles\n", "gd": "google mobile crawler is not reading the css\n"}, {"body": "is it possible using ssr to have data updated in real-time using firebase ? or is the page simply static with no possibility of receiving new data updated in real-time on the screen ? < code >\n", "itape": "how to use firebase auth data for ssr ?\n", "our": "tensor(640)\tis it possible to have data updated in real-time using ssr\n", "gd": "ssr and firebase updates in real time\n"}, {"body": "hello guys , when i use proptypes for components , i am not able to any warnings or errors . does anyone know how to use proptypes in a next app . please help me out ! < code >\n", "itape": "proptypes on the dev , it are not correctly\n", "our": "tensor(1799)\thow to use proptypes in next app\n", "gd": "react proptypes support in next js\n"}, {"body": "we 're fetching page data from a headless cms so all our pages use getserversideprops . our pages directory looks like this : we have a dynamic route for custom pages created by the cms editors . when i refresh or server-side route to the home page , news , or about , getserversideprops in [ custom ] .js is also called . even stranger , when i log the context.params in [ custom ] .js i get { custom : 'sw.js ' } . i 'm not too familiar with service workers , but i 'm guessing that 's what that is ... we basically want to use [ custom ] .js as a catch all route , i tried [ ... custom ] .js but it did n't make a difference . i 'm guessing having a dynamic page in the root of pages is just a bad idea ? hoping i can find a solution that does n't involve a custom server .. on nextjs 9.3.3 < code > pages/ index.js news.js about.js [ custom ] .js api/ email.js\n", "itape": "page is called by [ custom ] .js data workers\n", "our": "tensor(1956)\thow to use service workers with a dynamic route?\n", "gd": "dynamic page in root of pages directory\n"}, {"body": "my app seems to be able to access environment variables just fine when i start the app with npm run dev , but it does n't have access to it when i run npm run start . i set the env vars using export x=y on linux any idea why ? am i missing a step ? < code >\n", "itape": "how to set env variables on linux ?\n", "our": "tensor(1842)\taccessing environment variables with npm run start\n", "gd": "environment variables in dev and prod\n"}, {"body": "i 've spent like 3 hours today debugging why vite fails to run our production bundle . to hopefully save someone in the future those hours , i created this discussion . the errors you might encounter is either referenceerror : buffer is not defined or if you have it on window , you might get this one : this is caused by having import ' @ babel/polyfill ' . also the error might not happen in development if you have multiple entry points and you 're only testing those that do n't import it . when you remove the import and replace it with it builds and runs fine in both dev and production . a lot of projects might get this issue when they get ported to vite from webpack . many people have that import in their projects to support ie browsers . anyway good luck with vite and fare well . < code > import 'core-js/stable ' import 'regenerator-runtime/runtime vendor.79a2da47.js:131927 uncaught ( in promise ) error : expected opts.sync to be a function . at makeerror ( vendor.79a2da47.js:131927 ) at asserttypeof ( vendor.79a2da47.js:131924 ) at newgenerator ( vendor.79a2da47.js:131932 ) at gensync2 ( vendor.79a2da47.js:131835 ) at vendor.79a2da47.js:132459 at createcommonjsmodule ( vendor.79a2da47.js:22 ) at vendor.79a2da47.js:132454\n", "itape": "issue with vite production with @ babel/polyfill am\n", "our": "tensor(3032)\tvite fails to run production bundle\n", "gd": "dev diary-we shall not import @ babel/polyfill in vite projects\n"}, {"body": "feature request is your feature request related to a problem ? please describe . i 'm using a custom express server inside an electron app . when i load the electron app i see when i make a change to any file in the electron app ( for example in the main process , which kicks off the server ) , the app restarts ( with electron-reload ) , and it boots up the custom server again . i then see the exact same output . if the server is restarted , next.js is recompiling pages unnecessarily . describe the solution you 'd like only compile pages if something relating to the server has changed , not on every restart of the server . describe alternatives you 've considered none are apparent to me currently , but i 'm open to ideas . additional context reproduction steps : start a custom server let it build some page . shut the server down with something like ctrl^c restart it wait for it to build again , despite no code being changed . < code > [ elec ] > using external babel configuration [ elec ] > location : `` /app/babel.config.js '' [ elec ] [ ready ] compiled successfully [ elec ] [ event ] build page : / [ elec ] [ wait ] compiling ... [ elec ] [ ready ] compiled successfully\n", "itape": "custom express server wo n't work as expected in custom express server\n", "our": "tensor(2170)\tcustom express server recompiling pages on restart\n", "gd": "in development with a custom server , cache page loads if page contents did n't change\n"}, {"body": "hi , i 'm using webpack with vuetify-loader , and i would like to exclude all sass from the build process to reduce package sizes . i 'm quite new to webpack and ca n't find a way around this . if you have any idea , that would be great ! thank you , jeremy < code > // webpack.config.js const vuetifyloaderplugin = require ( 'vuetify-loader/lib/plugin ' ) module.exports = { module : { plugins : [ new vuetifyloaderplugin ( { match ( originaltag , { kebabtag , cameltag , path , component } ) { if ( kebabtag.startswith ( 'core- ' ) ) { return [ cameltag , 'import < cur > { cameltag } from ' @ /components/core/ < cur > { cameltag.substring ( 4 ) } .vue '' ] } } } ) ] , rules : [ { test : /\\.s ( [ ca ] ) ss < cur > / , use : [ 'vue-style-loader ' , 'css-loader ' , { loader : 'sass-loader ' , // requires sass-loader @ ^8.0.0 options : { implementation : require ( 'sass ' ) , sassoptions : { indentedsyntax : true // optional } , } , } , ] , } , ] , } , resolve : { alias : { 'vue < cur > ' : 'vue/dist/vue.esm.js ' } } }\n", "itape": "how to exclude custom css module from build ?\n", "our": "tensor(3487)\thow to exclude sass from the build process\n", "gd": "build vuetify w/ webpack without styles ?\n"}, {"body": "this is a pretty special question i have which stackoverflow is not able to answer . what i need to know is what parts of webpack and which 3rd party code it relies on are actually shipped in generated code . for legal approval i need to list all 3rd/4th party libraries that are shipped to customers . i looked at the package.json file of the project , but to me it looks as if that contains many build/dev dependencies . i installed < email > .2 explicitly ( this is the version used by current react-scripts ) which leaves me with a 600 lines long dependency tree . this can not all be runtime dependencies . much of that is certainly for build/dev time only , right ? so , how can i tell which dep is shipped ? < code >\n", "itape": "can i create a list of 3rd/4th dependencies ?\n", "our": "tensor(3812)\thow to know which dep is shipped?\n", "gd": "how to find out which own dependencies webpack uses at runtime ?\n"}, {"body": "hi , i am working on an ecom web application with front-end on nextjs and backend on java springboot . problem : i have a login component where i am making an authentication request to the backend server with the username and password . after a successful login i receive a jwt token . i add that token to the req headers with this line axios.defaults.headers.common [ 'authorization ' ] = bearer < cur > { res.data.jwt } then , i make a subsequent request to the backend to get some data where i should receive an array of states . the request needs me to add the jwt token in the headers which i did . but , i receive this error what i have tried till now : i have tried to use the reverse-proxy-with-custom-server example i have tried to use http-proxy-middleware to proxy the request in /pages/api/ [ ... slug ] .js ( this i believe should only work on the server side ) what i want to do : i would like to make the request from the login component and not receive the cors error . if it were a react application : i would have added the proxy in the package.json file and it should have worked or used the webpack config to configure a proxy . i know that this is a common request but , i am unable to find an answer anywhere with a clear explanation . hence , i turn to this community . i have spent the last 5 days looking for a solution to no avail . any help in this matter would be really appreciated . thank you for your service and time in advance . < code >\n", "itape": "having trouble understanding the jwt token in ecom community\n", "our": "tensor(1428)\tproxying a request from a login component\n", "gd": "proxy with http-proxy-middleware not working\n"}, {"body": "i have a problem with production build . while dev env is working perfectly , production 's build tree shaking somehow removes side effect of external library . let me explain . in current project we have internal component library ( lets name it our-lib @ 1.0.0 ) which is developed with rollup . inside this component library we are also using external libs like , ie . react-draft-wysiwyg . unfortunately we had to override some styles of this wysiwyg lib . we do it something like that : file : richtexteditor.css in project i want to use this customized component so i am doing import richtexteditor from 'our-lib ' ; . run dev env and everything is good , styles are ok. problem is when production build is generated . it does not contain .rdw-option-wrapper class for example ( and entire all from richtexteditor.css ) i bet this is because vite somehow cut out side effect which looks like this ( node_modules/our-lib/richtexteditor/richtexteditor.css.js ) whole file is removed in production build and styleinject is never called . please help bonus , after digging , setting build.rollupoptions.treeshake : false causes that styles are injected but you now ... build size < code > @ import '~react-draft-wysiwyg/dist/react-draft-wysiwyg.css ' ; .rdw-option-wrapper { background : transparent ; border : 0 ; } etc .... import { editor } from 'react-draft-wysiwyg ' ; ... import styles from './richtexteditor.module.scss ' ; import './richtexteditor.css ' // here is override global react-draft-wysiwyg\n", "itape": "issue with @ customized to work when production build\n", "our": "tensor(2547)\ttree shaking in production builds removes side effect of external library\n", "gd": "side effect of production build is removed\n"}, {"body": "bug report what is the current behavior ? when the same library from the same location is imported via commonjs require and es6 import results in two different instances for classes and duplicate code in the bundle . if the current behavior is a bug , please provide the steps to reproduce . if an app imports a class directly and then uses a commonjs-based 3rd party library that uses the same library it results having duplicate code in the bundle and instancesof does not work properly . the real issue happens with superstruct package , however , see the demo below with boiled down-version . visualization : repro : < url > what is the expected behavior ? webpack should be able to de-duplicate commonjs and es6 imports of the same library . the bundle should contain only one implementation of the library and instances should be able to be checked via instanceof . other relevant information : webpack version : ^5.46.0 node.js version : v15.1.0 operating system : mac os 10.15.7 additional tools : n/a < code > git clone < url > cd webpack-issue-commonjs-es6-deduplication/ cd app yarn yarn webpack yarn node dist/main.js output : localerror.source ( ) === index.es.js thirdpartyerror.source ( ) === index.cjs localerror instanceof customerror === true thirdpartyerror instanceof customerror === false [ `` app '' - es6 / 'import ' ] - > [ library ] - > index.es.js - > class customerror { } | [ 3rd party module - commonjs / 'require ' ] - > [ library ] - > index.cjs - > class customerror { }\n", "itape": "customerror + 3rd party imports does not work in commonjs\n", "our": "tensor(3742)\tde-duplicate commonjs and es6 imports\n", "gd": "same module imported via 'import ' and 'import - > require ' points to different code\n"}, {"body": "with a group of friends , we watch very lengthy videos together . around an hour and a half or so . our problem is that some of us have unstable connections , so if theres too much action on the video , it will stall . for that reason , we have a `` buffer '' button which preloads the full video , and then we play it . the thing is that we have to wait till everyone buffers , while its not a big deal it consumes time . so the question is , it is possible with video.js to preload the whole video while watching it ? the html5 tag preloads only a few seconds and is useless . thanks in advance < code >\n", "itape": "is it possible to switch the whole video ?\n", "our": "tensor(2511)\tis it possible to preload the whole video?\n", "gd": "possible to preload till the end while watching ?\n"}, {"body": "i 've been away from next.js for a bit and i 'm finding this a bit confusing . it seems like my pages get rendered before getstaticprops is called , which causes quite a lot of problems since a lot of context values are undefined on first render . on a simple page composed by : my console logs will be : is this what 's supposed to happen ? surely the my page should n't render if all the props passed to it are undefined ? how do i handle hooks that ca n't be conditionally rendered if i still want to mantain ssr and static exporting ? < code > export default function serverpage ( props ) { console.log ( `` props are '' , props.params ) ; return test ; } export async function getstaticprops ( context ) { console.log ( `` params are '' , context.params ) ; return { props : { params : context.params.id } , } ; } props are undefined params are { id : ' 2 ' } props are 2\n", "itape": "converting and loading context of context before getstaticprops\n", "our": "tensor(362)\thow to handle conditional renders?\n", "gd": "how come my page gets rendered before getstaticprops ?\n"}, {"body": "i 've looked in to api-routes-apollo-server-and-client-auth example and not sure how can i mutate context both on ssr and client request . i want for every graphql resolver ( using api ) have access to ctx.user object with preparsed jwt token . but where should i parse it ? if i parse it here : then ctx.user will be undefined on ssr request , working only on client request . < code > const apolloserver = new apolloserver ( { schema , context ( ctx ) { ctx.user = '123 ' return ctx } } ) export default apolloserver.createhandler ( { path : '/api/graphql ' } )\n", "itape": "how do i mutate in ssr and client request\n", "our": "tensor(145)\thow to mutate context on ssr and client request\n", "gd": "how to mutate apollo context ?\n"}, {"body": "i can not create barcode type in upc_ean_extension . it shows me error 'no encoder available for format upc_ean_extension ' . i need to test my application to decode barcode in this type . i very appreciate who can send me a sample image with barcode in upc_ean_extension , . < code >\n", "itape": "can not create barcode type to be overwritten\n", "our": "tensor(3967)\thow to create barcode type in upc_ean_extension?\n", "gd": "create bacode type in upc_ean_extension failed\n"}, {"body": "in development mode , when i use getstaticprops and getstaticpaths , with revalidate enabled , the first render of the page does n't have props passed to it . i can then see the getstaticprops called afterwards to fetch the data . is this expected behavior ? do i need to guard against undefined props for all the pages that use getstaticprops ? if i remove the revalidate property , things work as expected and the props are valid from the first request . < code >\n", "itape": "getstaticprops and getstaticpaths in development mode , when use getstaticprops and getstaticpaths\n", "our": "tensor(344)\tgetstaticprops and getstaticpaths don't pass props\n", "gd": "getstaticprops props are undefined first time with revalidate enabled\n"}, {"body": "if you just want add a simple html page to your project , you may place it in the public directory . but editing html file in public dir will not cause page reloading . in this case you can add a simple script tag in the html file . then , html in public will reload automatically after you editing it . < code > < script > if ( location.hostname === 'localhost ' ) { fetch ( '/ @ vite/client ' ) .then ( r = > r.text ( ) ) .then ( code = > { const client = document.createelement ( 'script ' ) client.type = 'module ' client.textcontent = code + ' socket.addeventlistener ( 'message ' , ( { data } ) = > { json.parse ( data ) .type === 'full-reload ' & & location.reload ( ) } ) ' document.head.append ( client ) } ) } < /script >\n", "itape": "css files not working in public dir in production page\n", "our": "tensor(2633)\thtml file in public dir will not reload automatically\n", "gd": "hot reload html in public directory\n"}, {"body": "feature request based upon the following not-quite-working example : v already knows that nums is of type [ ] [ ] int , so it seems like it should be smart enough to infer that an empty array inside of a [ ] [ ] int is a [ ] int . < code > user @ work1 : ~/v/examples < cur > cat type_inf_bug.v module main const ( nums = [ [ 2 ] , [ 0 , 1 ] , [ ] ] ) fn main ( ) { println ( nums ) } user @ work1 : ~/v/examples < cur > v run type_inf_bug.v type_inf_bug.v:4:23 : error : array_init : no type specified ( maybe : ' [ ] type { } ' instead of ' [ ] ' ) 2 | 3 | const ( 4 | nums = [ [ 2 ] , [ 0 , 1 ] , [ ] ] | ~~ 5 | ) 6 |\n", "itape": "support for an empty array inside a feature\n", "our": "tensor(3186)\tadd array_init to infer type of array\n", "gd": "smarter type inference of empty nested arrays\n"}, {"body": "bug report describe the bug when running the production build nextjs app inside a docker container , < link > components seem unable to perform a `` client-side transition '' . the page including the bundles are re-fetched , which can lead to several problems . this is issue can be resolved/ mitigated by downgrading to next : 9.5.5. to reproduce create a dockerfile build the docker image docker build . -t app run a container with the image created from said dockerfile : docker run -p 3000:3000 app click any < link > component in the app , and observe the page refetch . expected behavior the page redirection is performed on the client-side instead of a whole page fetch from the server . system information os : windows 10 version of next.js : 10.0.0 version of node.js : 15.4.0 deployment : next start inside docker container < code > workdir /opt copy package.json yarn.lock ./ run yarn -- frozen-lockfile copy . . env node_env=production run yarn build from node : alpine workdir /app env node_env=production copy -- from=build /opt/package.json . copy -- from=build /opt/yarn.lock . copy -- from=build /opt/.next ./.next copy -- from=build /opt/public ./public copy -- from=build /opt/node_modules ./node_modules user node entrypoint [ `` yarn '' , `` start '' ]\n", "itape": "page redirection when running the production build fetch\n", "our": "tensor(338)\tnextjs production build unable to perform <unk> client-side transition '\n", "gd": "nextjs - 10.0.0 - client-side transition in docker\n"}]